{"version":3,"sources":["Components/form/TextField.js","Components/form/select.js","util/Firebase.js","Components/form/superSelect.js","Components/form/upload_file.js","Components/Applicant/Applicant.js","Components/form/radioButton.js","Components/form/warning.js","Components/Quotes/Questions.js","Components/Pages/ForApplicants.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","fromControl","width","typography","fontSize","MyTextField","props","classes","React","useState","value","setValue","index","response","returnAnswer","title","useEffect","noValidate","autoComplete","Typography","variant","component","TextField","id","onChange","event","target","formControl","minWidth","maxWidth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","margin","spacing","SuperSelect","value_2","setValue_2","currentParties","setCurrentParties","open","setOpen","answers","updateState","parties","map","item","indexOf","FormControl","className","Select","console","log","onClose","onOpen","input","Input","MenuItem","style","padding","Autocomplete","autoSelect","options","textContent","allData","renderInput","params","label","UploadFile","setImage","progress","setProgress","Button","marginBottom","color","type","e","files","file","file_name","lastModified","name","Date","storage","ref","put","on","snapshot","currentProgress","bytesTransferred","totalBytes","error","child","getDownloadURL","then","url","hidden","Box","uploadLine","position","display","CircularProgress","top","left","bottom","right","alignItems","justifyContent","Math","round","Applicant","questions","setQuestions","setAnswers","returnFields","firestore","collection","doc","onSnapshot","data","answer","tmp","marginTop","RadioButton","ans","values","currentAnswer","Object","split","const","RadioGroup","aria-label","i","FormControlLabel","control","Radio","WarningText","text","trr","Questions","axises","setAxsises","results","setResults","unAnswered","setUnAnswered","showUnAnswered","setShowUnAnswered","firstQuestions","setFirstQuestions","questionsOnThePage","persons","returnAxisesAverage","db","slice","keys","forEach","v","getAnsweredQuestions","filter","Boolean","parseInt","answeredIds","length","allIds","includes","answers_values","axises_keys","all_axises","count_axises","el","key","axises_average","set","topFunction","document","body","scrollTop","documentElement","returnAxisAnswer","LinearProgress","textAlign","he","onClick","getElementById","scrollIntoView","behavior","block","checkAnswered","ForApplicants","fields","setFields","axisesAverage","setAxisesAverage","status","setStatus","currentFields","applicant","lastName","number","region","party","photoUrl","src","alt","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0c3f99af.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport {TextField, Typography} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n\tfromControl: {\n\t\t\twidth: '30%',\n\t},\n\ttypography: {\n\t\t\tfontSize:\"24px\"\n\t}\n\n}));\n\nconst MyTextField = (props) => {\n\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState('');\n\n\tconst {index, response, returnAnswer, title} = props\n\n\tuseEffect(() => {\n\t\tif (response) {\n\t\t\tsetValue(response)\n\t\t}\n\t}, [response])\n\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value)\n\t\treturnAnswer(event.target.value, index)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<form noValidate autoComplete=\"off\">\n\t\t\t\t<Typography classes={classes.typography} variant=\"h6\" component=\"h6\">\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t\t<TextField\n\t\t\t\t\tid={\"textField\"}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default MyTextField;\n","import React from 'react';\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport {Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tminWidth: \"30%\",\n\t\tmaxWidth: 300\n\t},\n\ttypography: {\n\t\tfontSize: \"24px\"\n\t}\n}));\n\nexport default function MySelectBox(props) {\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState('');\n\tconst [subAnswers, setSubAnswers] = React.useState([]);\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst {title, answers, returnAnswer,/* updateState, */index} = props;\n\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value);\n\t\treturnAnswer(event.target.value, index);\n\t\tconsole.log(event.target.value)\n\n\t\t/*let indexOfTrue = answers.map((item, id) => item.title == event.target.value).indexOf(true)\n\t\tsetSubAnswers(answers[indexOfTrue])*/\n\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\tconst handleOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\treturn (<div>\n\t\t\t<Typography className={classes.typography} variant=\"h6\" component=\"h6\">\n\t\t\t\t{title}\n\t\t\t</Typography>\n\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t<Select\n\t\t\t\t\tlabelId=\"demo-controlled-open-select-label\"\n\t\t\t\t\tid=\"demo-controlled-open-select\"\n\t\t\t\t\topen={open}\n\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\tonOpen={handleOpen}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t>\n\t\t\t\t\t<MenuItem value={\"None\"}><em>None</em></MenuItem>\n\t\t\t\t\t{answers.map((item, id) => (\n\t\t\t\t\t\t<MenuItem value={item.title}>\n\t\t\t\t\t\t\t{item.title}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t\t</div>\n\t)\n}","import firebase from \"firebase\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyD29vr6hDlRBNnNTTMG_EDGqTW6J0PuGa4\",\n\tauthDomain: \"local-elections-210f5.firebaseapp.com\",\n\tprojectId: \"local-elections-210f5\",\n\tstorageBucket: \"local-elections-210f5.appspot.com\",\n\tmessagingSenderId: \"666238817996\",\n\tappId: \"1:666238817996:web:57fd88586b301e8fe15469\",\n\tmeasurementId: \"G-EK2H89C8LB\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n\tfirebase.auth().signInWithPopup(provider)\n}\n\nexport default firebase;\n","import React, {useEffect, useState} from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport {Typography} from \"@material-ui/core\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\twidth: \"30%\"\n\t},\n\ttypography: {\n\t\tfontSize: \"24px\"\n\t}\n}));\n\n\nfunction SuperSelect(props) {\n\tconst [value, setValue] = useState(\"\");\n\tconst [value_2, setValue_2] = useState(\"\");\n\tconst [currentParties, setCurrentParties] = useState([])\n\tconst classes = useStyles();\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst {title, answers, returnAnswer, updateState, index} = props;\n\n\n\tuseEffect(() => {\n\t\tconst parties = answers.map((item, id) => item.answers)\n\t\tlet indexOf = answers.map((item, id) => item.title == value).indexOf(true)\n\t\tsetCurrentParties(parties[indexOf])\n\n\t}, [value])\n\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value);\n\t\tconsole.log(event.target.value)\n\t};\n\n\tconst handleChange_2 = (event) => {\n\t\tsetValue_2(event.target.textContent);\n\t\tconst allData = value + \"=>\" + event.target.textContent\n\t\treturnAnswer(allData, index)\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\tconst handleOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<Typography classes={classes.typography} variant=\"h6\" component=\"h6\">\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t<Select\n\t\t\t\t\t\topen={open}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\tonOpen={handleOpen}\n\t\t\t\t\t\tinput={<Input id=\"grouped-select\"/>}\n\t\t\t\t\t>\n\t\t\t\t\t\t{answers.map((item, id) => (\n\t\t\t\t\t\t\t<MenuItem value={item.title}>\n\t\t\t\t\t\t\t\t{item.title}\n\t\t\t\t\t\t\t</MenuItem>))}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\n\t\t\t\t{value && <div style={{padding:15}}><Autocomplete\n\t\t\t\t\tautoSelect\n\t\t\t\t\tclassName={classes.formControl}\n\t\t\t\t\tstyle={{margin: \"0 auto\"}}\n\t\t\t\t\toptions={currentParties}\n\t\t\t\t\tonChange={handleChange_2}\n\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t<TextField {...params}\n\t\t\t\t\t\t\t\t\t\t\t label=\"Партия\"\n\t\t\t\t\t\t\t\t\t\t\t value={value_2}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/></div>}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SuperSelect;","import React, {useEffect, useState} from \"react\";\nimport {render} from \"react-dom\";\nimport CircularProgress, {CircularProgressProps} from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport firebase from \"../../util/Firebase\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n\ttypography: {\n\t\tfontSize: \"24px\"\n\t}\n}));\nconst UploadFile = (props) => {\n\tconst [image, setImage] = useState(null);\n\tconst [progress, setProgress] = useState(null);\n\tconst classes = useStyles();\n\tconst {title, index, returnAnswer} = props;\n\n\tconst handleChange = e => {\n\t\tif (e.target.files[0]) {\n\t\t\tsetImage(e.target.files[0])\n\t\t\tconst file = e.target.files[0]\n\t\t\tconst file_name = file.lastModified + file.name + \"___\" + new Date()\n\t\t\tfirebase.storage().ref(`images/${file_name}`).put(e.target.files[0])\n\t\t\t\t.on(\n\t\t\t\t\t\"state_changed\",\n\t\t\t\t\tsnapshot => {\n\t\t\t\t\t\tlet currentProgress = ((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n\t\t\t\t\t\tsetProgress(currentProgress);\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\tconsole.log(error)\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tfirebase.storage()\n\t\t\t\t\t\t\t.ref(\"images\")\n\t\t\t\t\t\t\t.child(file_name)\n\t\t\t\t\t\t\t.getDownloadURL()\n\t\t\t\t\t\t\t.then(url => {\n\t\t\t\t\t\t\t\treturnAnswer(url, index)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t}\n\n\t}\n\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography classes={classes.typography} variant=\"h6\" component=\"h6\">\n\t\t\t\t{title}\n\t\t\t</Typography>\n\t\t\t<Button\n\t\t\t\tstyle={{marginBottom:15}}\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcomponent=\"label\"\n\t\t\t>\n\t\t\t\tUpload File\n\t\t\t\t<input\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\thidden\n\t\t\t\t/>\n\t\t\t</Button>\n\t\t\t<br/>\n\t\t\t{progress && <Box className={classes.uploadLine} position=\"relative\" display=\"inline-flex\">\n\t\t\t\t<CircularProgress variant=\"determinate\" {...{value: progress}} />\n\t\t\t\t<Box\n\t\t\t\t\ttop={0}\n\t\t\t\t\tleft={0}\n\t\t\t\t\tbottom={0}\n\t\t\t\t\tright={0}\n\t\t\t\t\tposition=\"absolute\"\n\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t>\n\t\t\t\t\t<Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n\t\t\t\t\t\tprogress\n\t\t\t\t\t)}%`}</Typography>\n\t\t\t\t</Box>\n\t\t\t</Box>}\n\t\t</div>\n\t)\n}\n\nexport default UploadFile;\n","import React, {useEffect, useState} from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport MySelectBox from \"../form/select\";\nimport MyTextField from \"../form/TextField\";\nimport firebase from \"../../util/Firebase\";\nimport SuperSelect from \"../form/superSelect\";\nimport UploadFile from \"../form/upload_file\";\n\nconst Applicant = (props) => {\n\tconst [questions, setQuestions] = useState([]);\n\tconst [answers, setAnswers] = useState([]);\n\n\tconst { returnFields } = props;\n\n\tuseEffect(() => {\n\t\tconst db = firebase.firestore();\n\t\tdb.collection(\"fields\").doc(\"applicant\")\n\t\t\t.onSnapshot((doc) => {\n\t\t\t\tsetQuestions(doc.data().questions);\n\t\t\t});\n\t},[])\n\n\n\tconst returnAnswer = (answer, index) => {\n\t\tconst tmp = [...answers]\n\t\ttmp[index] = answer\n\t\tsetAnswers(tmp)\n\t\treturnFields(tmp)\n\t}\n\n\treturn <div>\n\t\t{questions.map((item, index) => {\n\t\t\t\tif (item.type == \"text\") {\n\n\t\t\t\t\treturn <div style={{marginTop: 30}}><MyTextField returnAnswer={returnAnswer} index={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={item.title}/></div>\n\n\t\t\t\t} else if (item.type == \"photo\") {\n\n\t\t\t\t\treturn <div style={{marginTop: 30}}><UploadFile returnAnswer={returnAnswer} index={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t title={item.title} /></div>\n\n\t\t\t\t} else if (item.type == \"select_with_future\") {\n\t\t\t\t\treturn (<div style={{marginTop: 30}}>\n\t\t\t\t\t\t<SuperSelect answers={item.answers} title={item.title} index={index} returnAnswer={returnAnswer}/>\n\t\t\t\t\t</div>)\n\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\t}\n\t</div>\n}\n\nexport default Applicant;","import React, {useEffect} from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tmarginTop: \"30px\",\n\t\tmargin: \"0 auto\",\n\t\twidth: \"70%\",\n\t},\n\ttypography: {\n\t\tfontSize: \"24px\"\n\t}\n}));\nconst RadioButton = (props) => {\n\tconst [value, setValue] = React.useState('female');\n\tconst classes = useStyles();\n\tconst {title, id, answers, ans, index, values, returnAnswer} = props;\n\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value);\n\t\treturnAnswer(\"answ_\" + (1 + answers.indexOf(event.target.value)), index)\n\t};\n\n\tuseEffect(() => {\n\t\tif (ans){\n\t\t\tconst currentAnswer = Object.values(ans)[0].split(\"_\")[1] - 1\n\t\t\tsetValue(answers[currentAnswer])\n\t\t}\n\t}, {ans})\n\n\treturn (\n\t\t<div className={classes.formControl}>\n\t\t\t<Typography className={classes.typography} variant=\"h6\" component=\"h6\">\n\t\t\t\t{title}\n\t\t\t</Typography>\n\t\t\t<FormControl error={true} style={{margin: 0, padding: 0}} const='fieldset'>\n\t\t\t\t<RadioGroup aria-label={title} name={title} value={value} onChange={handleChange}>\n\t\t\t\t\t{answers.map((item, i) =>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tvalue={item}\n\t\t\t\t\t\t\tcontrol={<Radio/>}\n\t\t\t\t\t\t\tlabel={item}/>)\n\t\t\t\t\t}\n\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\n\t\t</div>\n\t);\n}\n\nexport default RadioButton;","import React from 'react';\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\nimport {Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n\ttypography: {\n\t\tfontSize: \"24px\",\n\t\tmargin: \"0 auto\",\n\t\tmarginTop: \"10px\",\n\t\twidth: \"70%\",\n\t}\n}));\nexport default function WarningText(props) {\n\tconst {text} = props\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.typography}>\n\t\t\t<Typography  color=\"secondary\" variant=\"caption\" component=\"p\">\n\t\t\t\t{text}\n\t\t\t</Typography>\n\t\t</div>\n\t)\n}","import React, {useEffect, useState} from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport MySelectBox from \"../form/select\";\nimport MyTextField from \"../form/TextField\";\nimport firebase from \"../../util/Firebase\";\nimport SuperSelect from \"../form/superSelect\";\nimport UploadFile from \"../form/upload_file\";\nimport RadioButton from \"../form/radioButton\";\nimport Grid from '@material-ui/core/Grid';\nimport WarningText from \"../form/warning\";\nimport {Button, LinearProgress, List, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tmarginTop: \"30px\",\n\t\tmargin: \"0 auto\",\n\t\twidth: \"70%\",\n\t},\n\ttypography: {\n\t\tfontSize: \"24px\"\n\t},\n\ttrr: {\n\t\tpadding: 0,\n\t\tmargin: 0,\n\t\twidth: '100%',\n\t\tposition: \"fixed\",\n\t}\n}));\n\nconst Questions = (props) => {\n\tconst [questions, setQuestions] = useState([]);\n\tconst [answers, setAnswers] = useState([]);\n\tconst [axises, setAxsises] = useState({});\n\tconst [results, setResults] = useState();\n\tconst [progress, setProgress] = useState(0);\n\tconst [unAnswered, setUnAnswered] = useState([])\n\tconst [showUnAnswered, setShowUnAnswered] = useState(null)\n\tconst [answeredIds, setAnsweredIds] = useState(null)\n\n\tconst [firstQuestions, setFirstQuestions] = useState(0);\n\tconst [questionsOnThePage, setQuestionsOnThePage] = useState(5);\n\n\tconst [currentQuestions, setCurrentQuestions] = useState([])\n\n\n\tconst classes = useStyles();\n\n\tconst {persons, returnAxisesAverage} = props;\n\n\tuseEffect(() => {\n\t\tconst db = firebase.firestore();\n\t\tdb.collection(\"questions\").doc(\"all_questions\")\n\t\t\t.onSnapshot((doc) => {\n\t\t\t\tsetQuestions(doc.data().questions.slice(0, 6));\n\t\t\t});\n\n\t\tdb.collection(\"questions\").doc(\"axises\")\n\t\t\t.onSnapshot((doc) => {\n\t\t\t\tsetAxsises(doc.data().axises);\n\t\t\t\tsetResults(Object.keys(doc.data().axises).forEach(v => doc.data().axises[v] = 0))\n\t\t\t});\n\t}, [])\n\n\tconst getAnsweredQuestions = () => {\n\t\tlet ids = answers.map((item, id) => item && Object.keys(item)[0])\n\t\t\t.filter(Boolean);\n\n\t\treturn ids.map(item => parseInt(item))\n\t}\n\n\tuseEffect(() => {\n\t\tlet answeredIds = getAnsweredQuestions();\n\t\tsetProgress((answeredIds.length * 100) / questions.length)\n\n\t\tlet allIds = questions.map((item, id) => id);\n\t\tallIds = allIds.map(i => (answeredIds.includes(i)) && i)\n\t\tallIds = allIds.slice(firstQuestions, firstQuestions + questionsOnThePage)\n\t\tsetUnAnswered(allIds)\n\n\t\tif (answeredIds.length == questions.length & (questions != false)) {\n\t\t\tlet answers_values = answers.map((item, id) => questions[id].values[item[id]])\n\t\t\tlet axises_keys = Object.keys(axises);\n\t\t\tlet all_axises = {};\n\t\t\taxises_keys.forEach(v => all_axises[v] = 0)\n\n\t\t\tlet count_axises = {};\n\t\t\taxises_keys.forEach(v => count_axises[v] = 0)\n\n\t\t\tanswers_values.map((el, id) => {\n\t\t\t\tObject.keys(el).forEach(key => {\n\t\t\t\t\tall_axises[key] += el[key];\n\t\t\t\t\tcount_axises[key] += 1;\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tlet axises_average = {};\n\t\t\tObject.keys(all_axises).map((key, id) => {\n\t\t\t\taxises_average[key] = (all_axises[key]) ? all_axises[key] / count_axises[key] : 0;\n\t\t\t})\n\n\t\t\tsetResults(axises_average);\n\t\t\treturnAxisesAverage(axises_average)\n\t\t}\n\t}, [answers])\n\n\tuseEffect(() => {\n\t\tif (results) {\n\t\t\tconst db = firebase.firestore();\n\t\t\tdb.collection(persons).doc(\"test_applicant\").set({results: results})\n\t\t}\n\n\t}, [results])\n\n\tconst topFunction = () => {\n\t\tdocument.body.scrollTop = 0;\n\t\tdocument.documentElement.scrollTop = 0;\n\t}\n\tconst checkAnswered = () => {\n\t\tlet answeredIds = getAnsweredQuestions();\n\n\t\tlet allIds = questions.map((item, id) => id);\n\t\tallIds = allIds.map(i => (answeredIds.includes(i)) && i)\n\t\tallIds = allIds.slice(firstQuestions, firstQuestions + questionsOnThePage)\n\n\n\t\tsetUnAnswered(allIds)\n\t\tsetShowUnAnswered(true)\n\n\t\tif (allIds.indexOf(false) != -1) {\n\t\t\tconst el = document.getElementById(`question${allIds.indexOf(false) + firstQuestions}`)\n\t\t\tif (el) {\n\t\t\t\tel.scrollIntoView({\n\t\t\t\t\tbehavior: \"smooth\",\n\t\t\t\t\tblock: \"start\"\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\tsetFirstQuestions(firstQuestions + questionsOnThePage);\n\t\t\tsetShowUnAnswered(null)\n\t\t\ttopFunction();\n\n\t\t}\n\t}\n\n\tconst previous = () => {\n\t\tsetFirstQuestions(firstQuestions - questionsOnThePage);\n\t\ttopFunction();\n\t}\n\n\tconst returnAxisAnswer = (answer, index) => {\n\t\tconst tmp = [...answers]\n\t\ttmp[index] = {[index]: answer}\n\t\tsetAnswers(tmp)\n\t\tconsole.log(tmp)\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<LinearProgress style={{position: 'sticky', top: 0}} variant=\"determinate\" value={(progress) ? progress : 0}/>\n\t\t\t<div style={{textAlign: \"left\",}}>\n\t\t\t\t{questions.slice(firstQuestions, firstQuestions + questionsOnThePage).map((item, index) => (\n\t\t\t\t\t<div id={\"question\" + (index + firstQuestions)}>\n\t\t\t\t\t\t<RadioButton\n\t\t\t\t\t\t\tkey={index + firstQuestions}\n\t\t\t\t\t\t\ttitle={item.title}\n\t\t\t\t\t\t\tanswers={item.answers.he}\n\t\t\t\t\t\t\treturnAnswer={returnAxisAnswer}\n\t\t\t\t\t\t\tid={index}\n\t\t\t\t\t\t\tans={answers[firstQuestions + index]}\n\t\t\t\t\t\t\tindex={index + firstQuestions}\n\t\t\t\t\t\t\tvalues={item.values}/>\n\t\t\t\t\t\t{!unAnswered.includes(index + firstQuestions) && (showUnAnswered) && <WarningText text=\"ОТВЕТЬТЕ ПЛИИИЗ\"/>}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t{(firstQuestions + questionsOnThePage > questionsOnThePage) ?\n\t\t\t\t<Button variant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\tonClick={() => previous()}>\n\t\t\t\t\tPrevious\n\t\t\t\t</Button>\n\t\t\t\t:\n\t\t\t\t<div></div>\n\t\t\t}\n\t\t\t<Button variant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tonClick={() => checkAnswered()}>\n\t\t\t\tNext\n\t\t\t</Button>\n\t\t</div>\n\t)\n}\n\nexport default Questions;","import React, {useEffect, useState} from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport Applicant from \"../Applicant/Applicant\";\nimport Questions from \"../Quotes/Questions\";\nimport firebase from \"../../util/Firebase\";\n\n\nconst ForApplicants = () => {\n\tconst [fields, setFields] = useState([]);\n\tconst [axisesAverage, setAxisesAverage] = useState(null);\n\tconst [allFields, setAllFields] = useState(null);\n\tconst [final, setFinal] = useState(null);\n\tconst [status, setStatus] = useState(\"start\")\n\n\n\tuseEffect(() => {\n\t\tconsole.log(fields)\n\t\tlet currentFields = fields.filter(Boolean)\n\t\tif ((currentFields != false) && currentFields.length == 5) {\n\t\t\tsetStatus(\"questions\")\n\t\t}\n\t}, [fields]);\n\n\tuseEffect(() => {\n\t\tif (axisesAverage) {\n\t\t\tconst name = fields[0];\n\t\t\tconst lastName = fields[1];\n\t\t\tconst number = fields[3];\n\t\t\tconst region = fields[2].split(\"=>\")[0];\n\t\t\tconst party = fields[2].split(\"=>\")[1];\n\t\t\tconst photoUrl = fields[4];\n\n\t\t\tconst applicant = {\n\t\t\t\tname: name,\n\t\t\t\tlastName: lastName,\n\t\t\t\tnumber: number,\n\t\t\t\tregion: region,\n\t\t\t\tparty: party,\n\t\t\t\tphotoUrl: photoUrl,\n\t\t\t\taxises: axisesAverage\n\t\t\t}\n\n\t\t\tconst db = firebase.firestore();\n\t\t\tdb.collection(\"applicants\").doc().set(applicant)\n\t\t\tsetStatus(\"final\")\n\t\t}\n\t}, [axisesAverage])\n\n\tconst returnFields = (answer) => {\n\t\tsetFields(answer)\n\t}\n\n\tconst returnAxisesAverage = (answer) => {\n\t\tsetAxisesAverage(answer)\n\t}\n\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{(status == \"start\") ? <Applicant returnFields={returnFields}/> :\n\t\t\t\t(status == \"questions\") ? <Questions returnAxisesAverage={returnAxisesAverage} persons=\"applicants\"/> :\n\t\t\t\t\t<div><h1>спасибо за то что прошли наш тест</h1><img\n\t\t\t\t\t\tsrc=\"https://st.depositphotos.com/1724162/4091/i/600/depositphotos_40912841-stock-photo-cats-eyes.jpg\"\n\t\t\t\t\t\talt=\"kitty\"/></div>\n\t\t\t}\n\n\t\t</div>\n\t);\n}\n\nexport default ForApplicants;","import './App.css';\nimport MyTextField from \"./Components/form/TextField\";\nimport React from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport ForApplicants from \"./Components/Pages/ForApplicants\";\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n} from \"react-router-dom\";\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Route exact path={\"/local_elections/applicants/\"} component={ForApplicants}/>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}